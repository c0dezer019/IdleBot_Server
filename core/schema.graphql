schema {
    query: Query
    mutation: Mutation
}

scalar BigInt
scalar DateTime
scalar Dict

type Member {
    id: ID!
    member_id: BigInt!
    username: String!
    nickname: String
    last_activity: String
    last_activity_loc: String
    last_activity_ts: DateTime
    status: String
    date_added: DateTime
}

type MemberResult {
    code: Int!
    success_msg: String
    errors: [String]
    member: Member
}

type MembersResult {
    code: Int!
    errors: [String]
    members: [Member]
}

type Guild {
    id: ID!
    guild_id: BigInt!
    name: String!
    last_activity: String
    last_activity_loc: String
    last_activity_ts: String
    status: String
    settings: Dict
    members: [Member!]
    date_added: DateTime
}

type GuildResult {
    code: Int!
    success_msg: String
    errors: [String]
    guild: Guild
}

type GuildsResult {
    code: Int!
    errors: [String]
    guilds: [Guild]
}

type Query {
    members: MembersResult!
    member(member_id: BigInt!): MemberResult
    guilds: GuildsResult!
    guild(guild_id: BigInt!): GuildResult
}

type DeleteResult {
    code: Int!
    success_msg: String
    errors: [String]
}

type Mutation {
    createGuild(guild_id: BigInt!, name: String!): GuildResult!
    updateGuild(guild_id: BigInt!, name: String, last_activity: String, last_activity_loc: String, last_activity_ts: DateTime, status: String): GuildResult!
    deleteGuild(guild_id: BigInt!): DeleteResult!
    createMember(guild_id: BigInt!, member_id: BigInt!, username: String!, nickname: String): MemberResult!
    updateMember(member_id: BigInt!, nickname: String, last_activity: String, last_activity_loc: String, last_activity_ts: DateTime): MemberResult!
    deleteMember(member_id: BigInt!): DeleteResult!
}