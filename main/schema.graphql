schema {
    query: Query
    mutation: Mutation
}

scalar DateTime

type Member {
    id: ID!
    member_id: Int!
    username: String!
    nickname: String
    last_activity: String
    last_activty_loc: String
    last_activity_ts: DateTime
    status: String
    date_added: DateTime
}

type MemberResult {
    success: Boolean!
    errors: [String]
    member: Member
}

type MembersResult {
    success: Boolean!
    errors: [String]
    members: [Member]
}

type Guild {
    id: ID!
    guild_id: Int!
    name: String!
    last_activity: String
    last_activity_ts: String
    status: String
    members: [Member]
    date_added: DateTime
}

type GuildResult {
    success: Boolean!
    errors: [String]
    guild: Guild
}

type GuildsResult {
    success: Boolean!
    errors: [String]
    guilds: [Guild]
}

type Query {
    members: MembersResult!
    member(memberId: Int!): MemberResult!
}

type DeleteResult {
    success: Boolean!
    errors: [String]
}

type Mutation {
    createGuild(guild_id: Int!, name: String!): GuildResult!
    updateGuild(guild_id: Int!, last_activity: String, last_activity_ts: DateTime, status: String): GuildResult!
    deleteGuild(guild_id: Int!): DeleteResult!
    createMember(member_id: Int!, username: String!, nickname: String): MemberResult!
    updateMember(member_id: Int!, nickname: String, last_activity: String, last_activity_loc: String, last_activity_ts: DateTime): MemberResult!
    deleteMember(member_id: Int!): DeleteResult!
}